type User {
  id: ID! @id
  name: String!
  username: String! @unique
  email: String @unique
  newsItems: [News]
  talks: [Talk]
  githubToken: String!
  profilePic: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type News {
  id: ID! @id
  slug: String! @unique
  title: String!
  content: String!
  previewImage: String
  isFeatured: Boolean
  writer: User! @relation(link: INLINE)
  tags: [Tag]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Talk {
  id: ID! @id
  slug: String! @unique
  title: String!
  previewImage: String!
  alt: String
  isFeatured: Boolean
  speaker: User @relation(link: INLINE)
  length: Int
  tags: [Tag]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Repo {
  id: ID! @id
  slug: String! @unique
  githubName: String!
  githubOwner: String!
  githubUrl: String!
  ownerUsername: String!
  isFeatured: Boolean
  description: String
  owner: User @relation(link: INLINE)
  tags: [Tag]
  upvotes: [Upvote]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Upvote {
  id: ID! @id
  user: User! @relation(link: INLINE)
  repo: Repo! @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Tag {
  id: ID! @id
  name: String! @unique
  talks: [Talk]
  newsItems: [News]
  repos: [Repo]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
